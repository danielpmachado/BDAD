--
-- File generated with SQLiteStudio v3.1.1 on qua mar 29 16:55:21 2017
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: ARMAS
CREATE TABLE ARMAS (
	IDARMA INTEGER PRIMARY KEY, 
	CLASSE VARCHAR NOT NULL, 
	PESO DOUBLE, 
	NOME VARCHAR NOT NULL, 
	CALIBRE DOUBLE);

-- Table: BASE
CREATE TABLE BASE (
	NOME VARCHAR NOT NULL, 
	LOCALIZACAO VARCHAR NOT NULL, 
	AREA INTEGER CHECK (AREA > 10000), 
	CAPACIDADEMAX INTEGER CHECK (CAPACIDADEMAX > 100), 
	VERTENTE VARCHAR REFERENCES RAMOFORCASARMADAS (VERTENTE), 
	PRIMARY KEY (NOME, LOCALIZACAO));

-- Table: FORNECEDOR
CREATE TABLE FORNECEDOR (
	NOMEMPRESA VARCHAR NOT NULL PRIMARY KEY, 
	CONTACTO INTEGER, 
	LOCALIZACAOSEDE VARCHAR NOT NULL);

-- Table: FUNCAO
CREATE TABLE FUNCAO (
	FUNCAO VARCHAR NOT NULL PRIMARY KEY, 
	HORASTRABALHO INTEGER);

-- Table: INSCRITOSEMMISSAO
CREATE TABLE INSCRITOSEMMISSAO (
	IDMISSAO REFERENCES MISSOES (IDMISSAO), 
	NIDENTIFICACAOCIVIL INTEGER REFERENCES MILITAR (NIDENTIFICACAOCIVIL));

-- Table: MILITAR
CREATE TABLE MILITAR (
	NIDENTIFICACAOCIVIL INTEGER PRIMARY KEY REFERENCES PESSOA (NIDENTIFICACAOCIVIL), 
	HIERARQUIA VARCHAR NOT NULL, 
	FUNCAO VARCHAR NOT NULL, 
	SALARIO DOUBLE);

-- Table: MILITARALOCADO
CREATE TABLE MILITARALOCADO (
	IDMISSAO INTEGER REFERENCES MISSOES (IDMISSAO), 
	NIDENTIFICACAOCIVIL INTEGER REFERENCES MILITAR (NIDENTIFICACAOCIVIL), 
	IDENTIFICADORPESSOAL INTEGER, 
	PRIMARY KEY (IDMISSAO, IDENTIFICADORPESSOAL ));

-- Table: MISSOES
CREATE TABLE MISSOES (
	IDMISSAO INTEGER PRIMARY KEY, 
	LOCAL VARCHAR NOT NULL, 
	DATAINICIAL DATE, 
	DATAFINAL DATE, 
	TIPO VARCHAR NOT NULL 
	CHECK (TIPO = 'Militar' or TIPO = 'Nao militar'));

-- Table: PESSOA
CREATE TABLE PESSOA (
	NIDENTIFICACAOCIVIL INTEGER PRIMARY KEY, 
	NOME VARCHAR NOT NULL, 
	DATANASCIMENTO DATE, 
	GENERO CHAR, 
	ALTURA DOUBLE);

-- Table: QUANTIDADADEARMA
CREATE TABLE QUANTIDADADEARMA (
	IDARMA INTEGER REFERENCES ARMAS (IDARMA), 
	IDMISSAO INTEGER REFERENCES ARMAS (IDARMA), 
	NUMERO INTEGER, 
	PRIMARY KEY (IDARMA, IDMISSAO));

-- Table: QUANTIDADEVEICULO
CREATE TABLE QUANTIDADEVEICULO (
	IDVEICULO INTEGER, IDMISSAO INTEGER, 
	NUMERO INTEGER, 
	PRIMARY KEY (IDVEICULO, IDMISSAO));

-- Table: RAMOFORCASARMADAS
CREATE TABLE RAMOFORCASARMADAS (
	VERTENTE VARCHAR NOT NULL PRIMARY KEY, 
	LEMA VARCHAR NOT NULL, 
	MARCHA VARCHAR NOT NULL, 
	PATRONO VARCHAR NOT NULL, 
	GENERAL VARCHAR NOT NULL, 
	CHECK (VERTENTE = 'Força aérea' or VERTENTE = 'Exército' or VERTENTE = 'Marinha'));

-- Table: RELACAOMILITAR
CREATE TABLE RELACAOMILITAR (
	SOLDADO INTEGER PRIMARY KEY REFERENCES MILITAR (NIDENTIFICACAOCIVIL), 
	SUPERIOR INTEGER REFERENCES MILITAR (NIDENTIFICACAOCIVIL));

-- Table: STOCKARMAS
CREATE TABLE STOCKARMAS (
	NUMERO INTEGER CHECK (NUMERO > 0), 
	IDARMA INTEGER REFERENCES ARMAS (IDARMA), 
	NOMEBASE VARCHAR NOT NULL REFERENCES BASE (NOME), 
	LOCALBASE VARCHAR NOT NULL REFERENCES BASE (LOCAL), 
	PRIMARY KEY (IDARMA, NOMEBASE, LOCALBASE));

-- Table: STOCKVEICULOS
CREATE TABLE STOCKVEICULOS (
	NUMERO INTEGER CHECK (NUMERO > 0)
	IDVEICULO INTEGER REFERENCES VEICULO (IDVEICULO), 
	LOCAL VARCHAR NOT NULL REFERENCES BASE ("NOME "));

-- Table: TIPOVEICULO
CREATE TABLE TIPOVEICULO (
	TIPO VARCHAR NOT NULL PRIMARY KEY);

-- Table: VEICULO
CREATE TABLE VEICULO (
	IDVEICULO VARCHAR NOT NULL PRIMARY KEY, 
	COMPRIMENTO DOUBLE, 
	LARGURA DOUBLE, 
	ALTURA DOUBLE, 
	MOTOR VARCHAR NOT NULL, 
	VELOCIDADEMAX DOUBLE, 
	TIPO STRING REFERENCES TIPOVEICULO (TIPO), 
	FORNECEDOR VARCHAR NOT NULL REFERENCES FORNECEDOR (NOMEMPRESA));

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
